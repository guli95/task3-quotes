{"version":3,"sources":["Quote.js","Button.js","Api.js","reportWebVitals.js","index.js"],"names":["Quoete","props","index","quotesHistory","error","quote","author","Button","onClick","action","text","Api","state","data","imgId","url","loader","fetchImg","fetch","then","setState","catch","console","getPreviousQuote","prevState","addQuote","quotesIndex","Math","floor","random","length","concat","response","json","this","className","style","backgroundImage","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e10c59c0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Quoete=(props)=>{\r\n    const{index, quotesHistory, error}=props\r\n    if(error){\r\n      return <h1>There is no previous quote. Generate a new one</h1>\r\n    }\r\n    else if(index===0 && error===false){\r\n      return <h1>Generate a quote</h1>\r\n    }\r\n    else if(index>0){\r\n      return(\r\n        <p>Quote for your day: <span>\"{quotesHistory[index-1].quote}\" ~{quotesHistory[index-1].author}</span></p>\r\n      )\r\n    }\r\n  }\r\nexport default Quoete","import React from \"react\";\r\nconst Button = (props) => <button onClick={props.action}>{props.text}</button>;\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Quoete from \"./Quote\";\r\nimport Button from \"./Button\";\r\nclass Api extends React.Component {\r\n  state = {\r\n    data: [\"https://picsum.photos/id/220/1280/853\"],\r\n    index: 0,\r\n    error: false,\r\n    imgId: [],\r\n    quotesHistory: [],\r\n    url: \"https://picsum.photos/id/49/1280/853\",\r\n    loader: true,\r\n  };\r\n  fetchImg = () =>\r\n    fetch(this.state.url)\r\n      .then(() =>\r\n        this.setState({\r\n          loader: false,\r\n        })\r\n      )\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        this.setState((prevState) => ({\r\n          data: prevState.data.concat(data),\r\n        }))\r\n      )\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n    this.fetchImg();\r\n  }\r\n  getPreviousQuote = () => {\r\n    if (this.state.index > 0) {\r\n      this.setState((prevState) => ({\r\n        index: prevState.index - 1,\r\n        url: prevState.imgId[prevState.index - 1],\r\n        loader: true,\r\n      }));\r\n    } else {\r\n      return this.setState({\r\n        error: true,\r\n      });\r\n    }\r\n    this.fetchImg();\r\n  };\r\n\r\n  addQuote = () => {\r\n    const quotesIndex = Math.floor(Math.random() * this.state.data.length);\r\n    this.setState((prevState) => ({\r\n      quotesHistory: prevState.quotesHistory.concat(\r\n        this.state.data[quotesIndex]\r\n      ),\r\n      index: prevState.index + 1,\r\n      error: false,\r\n      url: `https://picsum.photos/id/${prevState.index + 50}/1280/853`,\r\n      imgId: prevState.imgId.concat(this.state.url),\r\n      loader: true,\r\n    }));\r\n    fetch(this.state.url)\r\n      .then(() =>\r\n        this.setState({\r\n          loader: false,\r\n        })\r\n      )\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n  render() {\r\n    const { index, quotesHistory, error } = this.state;\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"img\"\r\n          style={{\r\n            backgroundImage: `url(${this.state.url})`,\r\n          }}\r\n        >\r\n          {this.state.loader ? <div className=\"loader\"></div> : \"\"}\r\n          <Quoete error={error} index={index} quotesHistory={quotesHistory} />\r\n        </div>\r\n        <div className=\"button-wrapper\">\r\n          <Button action={this.addQuote} text=\"Next Quote\" />\r\n          <Button action={this.getPreviousQuote} text=\"Previous Quote\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Api;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Api from './Api';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Api />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}